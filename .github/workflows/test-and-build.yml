name: Test build
run-name: Try `next build` to make sure it doesn't fail in production
on: [push]

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

jobs:
  test-build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: npm install
      - name: Prepare Prisma
        run: |
          npm run prebuild
      - name: Migrate db
        run: |
          npm run migrate
      - name: Build website
        run: |
          npm run build
      - run: echo "üçè This job's status is ${{ job.status }}."